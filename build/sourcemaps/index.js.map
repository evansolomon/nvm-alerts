{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["let _ = require('lodash-node');\nlet instapromise = require('instapromise');\nlet jsonFile = require('@exponent/json-file');\nlet needle = require('needle');\nlet path = require('path');\nlet semver = require('semver');\n\nlet r = require('./database/r');\nlet slack = require('./slack');\n\nconst LISTING_URL = 'https://iojs.org/dist/index.tab';\nlet cache = jsonFile(path.join(__dirname, '_cache.json'));\n\nasync function getLatestIojsVersionAsync() {\n  let response = await needle.promise.get(LISTING_URL);\n  let lines = response.body.split(\"\\n\");\n  let cols = lines[1].split(\"\\t\");\n  return semver.parse(cols[0]);\n}\n\nasync function compareVersionAsync(version) {\n  try {\n    var cachedVersion = semver.parse(await cache.getAsync('latestVersion'));\n  } catch (e) {\n    console.error(\"No cached version available; assuming this version is not new.\");\n    await cache.writeAsync({\n      latestVersion: version.format(),\n    });\n    return false;\n  }\n  // console.log(\"cachedVersion=\", cachedVersion, \"version=\", version);\n  return (cachedVersion.compare(version) < 0);\n}\n\nasync function getAndCompareAsync() {\n  let v = await getLatestIojsVersionAsync();\n  let isNew = await compareVersionAsync(v);\n  if (isNew) {\n    await cache.updateAsync('latestVersion', v.format())\n  }\n  return {\n    isNew,\n    version: v,\n  };\n}\n\nasync function pollAsync() {\n  let {isNew, version} = await getAndCompareAsync();\n  if (isNew) {\n    console.log(\"There is a new version of iojs:\", version.format());\n    await slack.sendNewIojsVersionMessageAsync(version);\n  } else {\n    console.log(\"Already on the latest version of iojs:\", version.format());\n  }\n  return {isNew, version};\n}\n\nmodule.exports = pollAsync;\n\n_.assign(pollAsync, {\n  getLatestIojsVersionAsync,\n  pollAsync,\n  cache,\n  getAndCompareAsync,\n  compareVersionAsync,\n});\n\nif (require.main === module) {\n  pollAsync().then(() => {\n    process.exit(0);\n  }, (err) => {\n    console.error(\"Error when polling and comparing versions!\");\n    process.exit(-1);\n  });\n}\n"],"sourceRoot":"/source/"}